schemaVersion: '2.0.0'
globalEnvVars:
  - key: "KEY_PASSWORD"
    value: "testtest1!!!"

commandTests:
  - name: "icon_rc"
    command: "icon_rc"
    args: ["--version"]
    expectedOutput: [".*icon_rc.*"]

  - name: "iconservice"
    command: "pip"
    args: ["show", "iconservice"]
    expectedOutput: [".*iconservice.*"]

  - name: "iconrpcserver"
    command: "pip"
    args: ["show", "iconrpcserver"]
    expectedOutput: [".*iconrpcserver.*"]

  - name: "loopchain"
    command: "pip"
    args: ["show", "loopchain"]
    expectedOutput: [".*loopchain.*"]

  - name: "Generate a PKCS8 DER encrypted private key and Check peer_id"
    command: "bash"
    args:
      - -c
      - |
        openssl ecparam -genkey -name secp256k1 | openssl ec -aes-256-cbc -out private_der.pem -passout pass:$KEY_PASSWORD &&
        openssl ec -in private_der.pem -pubout -out public_der.pem -passin pass:$KEY_PASSWORD &&
        openssl pkcs8 -topk8  -in private_der.pem -out private_der.der -outform der -passout pass:test -passin pass:$KEY_PASSWORD &&
        openssl ec -in private_der.pem -pubout -outform DER -out pubilc_der.der -passin pass:$KEY_PASSWORD &&
        /src/getPeerID.py /private_der.pem $KEY_PASSWORD
    expectedOutput: ["hx.*"]


  - name: "Generate a private key and Check peer_id"
    command: "bash"
    args:
      - -c
      - |
        openssl ecparam -genkey -name secp256k1 | openssl ec -aes-256-cbc -out /my_private.pem -passout pass:$KEY_PASSWORD &&
        /src/getPeerID.py /my_private.pem $KEY_PASSWORD
    expectedOutput: ["hx.*"]

  - name: "Generate a private key and Check peer_id without extension"
    command: "bash"
    args:
      - -c
      - |
        openssl ecparam -genkey -name secp256k1 | openssl ec -aes-256-cbc -out /my_private -passout pass:$KEY_PASSWORD &&
        /src/getPeerID.py /my_private $KEY_PASSWORD
    expectedOutput: ["hx.*"]

  - name: "Generate a keystore file and Check peer_id"
    command: "bash"
    args:
      - -c
      - |
        icon_wallet.py keystore -f /keystore.json  -p $KEY_PASSWORD &&
        /src/getPeerID.py /keystore.json $KEY_PASSWORD
    expectedOutput: ["hx.*"]


  - name: "Generate a keystore file and Check peer_id without extension"
    command: "bash"
    args:
      - -c
      - |
        icon_wallet.py keystore -f /keystore  -p $KEY_PASSWORD &&
        /src/getPeerID.py /keystore  $KEY_PASSWORD
    expectedOutput: ["hx.*"]


  - name: "Generate a keystore file and Check peer_id with UTF-8 BOM"
    command: "bash"
    args:
      - -c
      - |
        icon_wallet.py keystore -f /keystore.json  -p $KEY_PASSWORD &&
        printf '\xEF\xBB\xBF' > /keystore_with_bom.json &&
        cat /keystore.json >> /keystore_with_bom.json &&
        /src/getPeerID.py /keystore_with_bom.json $KEY_PASSWORD
    expectedOutput: ["hx.*"]
